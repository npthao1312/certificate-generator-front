[{"/home/thaonp/Desktop/certificate-generator-front/src/index.js":"1","/home/thaonp/Desktop/certificate-generator-front/src/App.js":"2","/home/thaonp/Desktop/certificate-generator-front/src/reportWebVitals.js":"3","/home/thaonp/Desktop/certificate-generator-front/src/serviceWorker.js":"4","/home/thaonp/Desktop/certificate-generator-front/src/components/hompage.component.js":"5","/home/thaonp/Desktop/certificate-generator-front/src/components/instrpage.component.js":"6"},{"size":605,"mtime":1609006472355,"results":"7","hashOfConfig":"8"},{"size":1701,"mtime":1609086152273,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608982594978,"results":"10","hashOfConfig":"8"},{"size":5085,"mtime":1608989235670,"results":"11","hashOfConfig":"8"},{"size":2486,"mtime":1609093480329,"results":"12","hashOfConfig":"8"},{"size":521,"mtime":1609086299781,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1cec75v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"/home/thaonp/Desktop/certificate-generator-front/src/index.js",["31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, Link, BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["33","34"],"/home/thaonp/Desktop/certificate-generator-front/src/App.js",["35"],"import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './App.css';\n\nimport HomePage from './components/hompage.component';\nimport InstrPage from './components/instrpage.component';\n\nclass App extends Component {\n  render(){\n      return (\n        <div className=\"App\">\n          <nav className=\"navbar navbar-expand-md navbar-dark my-bg-primary\">\n            <div className=\"container\"> <button className=\"navbar-toggler navbar-toggler-right border-0\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbar\">\n                <ul className=\"navbar-nav mx-auto\"></ul>\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item\">\n                  <Link to={\"/\"} className=\"nav-link text-white\">\n                  Home\n                  </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                  <Link className=\"nav-link text-white\" to={\"/instruction\"}>\n                  Instructions\n                  </Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route exact path={[\"/\"]} component={HomePage} />\n              <Route exact path={[\"/instruction\"]} component={InstrPage} />\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n  }\nexport default App;\n","/home/thaonp/Desktop/certificate-generator-front/src/reportWebVitals.js",[],"/home/thaonp/Desktop/certificate-generator-front/src/serviceWorker.js",[],["36","37"],"/home/thaonp/Desktop/certificate-generator-front/src/components/hompage.component.js",["38"],"/home/thaonp/Desktop/certificate-generator-front/src/components/instrpage.component.js",["39"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class InstrPage extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"container-fluid h-100\">\n          <div className=\"row align-items-center h-100\">\n            1. Upload a certificate template and an excel file including names.<br/>\n            2. Click generate to have a list of certificates with respective names\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"40","severity":1,"message":"41","line":6,"column":10,"nodeType":"42","messageId":"43","endLine":6,"endColumn":15},{"ruleId":"40","severity":1,"message":"44","line":6,"column":17,"nodeType":"42","messageId":"43","endLine":6,"endColumn":21},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"40","severity":1,"message":"49","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":12},{"ruleId":"45","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":58,"column":15,"nodeType":"54","endLine":58,"endColumn":70},{"ruleId":"40","severity":1,"message":"44","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":14},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'logo' is defined but never used.",["55"],["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]